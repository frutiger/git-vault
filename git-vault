#!/bin/bash

print() {
    echo git-vault: "$@" 1>&2
}

trace() {
    if [ $GIT_VAULT_TRACE ]; then
        print "$@"
    fi
}

function usage() {
    echo "git vault add <name> <location>"
    echo "git vault rm <name>"
    echo "git vault wrap <name> <command> <location>"
}

function encrypt() {
    url=$1
    repo=$2

    archive=$(mktemp -t git-vault)

    tar -c -f $archive -C $repo .                    && \
        trace "archived: $repo -> $archive"          && \
        openssl enc $enc_opts -in $archive -out $url && \
        trace "encrypted: $archive -> $url"
    rc=$?

    rm $archive
    return $rc
}

function decrypt() {
    repo=$1
    url=$2

    archive=$(mktemp -t git-vault)

    openssl enc $enc_opts -in $url -out $archive -d && \
        trace "decrypted: $url -> $archive"         && \
        tar -x -f $archive -C $repo                 && \
        trace "extracted: $archive -> $repo"
    rc=$?

    rm $archive
    return $rc
}

function set_enc_options()
{
    vault=$1

    if git config vault.$vault-options >/dev/null 2>/dev/null; then
        enc_opts="$(git config vault.$vault.enc-options)"
    elif git config vault.$vault.password >/dev/null 2>/dev/null; then
        enc_opts="-aes-128-cbc -pass pass:$(git config vault.$vault.password)"
    else
        print "Set your vault password:"
        print "  $ git config vault.$vault.password <password>"
        exit
    fi
}

function create_repo() {
    url=$1

    tempdir=$(mktemp -d -t git-vault)

    git init --bare $tempdir >/dev/null && \
        encrypt $url $tempdir
    rc=$?

    rm -rf $tempdir
    return $rc
}

function wrap() {
    command=$1
    url=$2

    tempdir=$(mktemp -d -t git-vault)

    decrypt $tempdir $url     && \
        $command $tempdir     && \
        encrypt $url $tempdir
    rc=$?

    rm -rf $tempdir
    return $rc
}

if [[ $# < 1 ]]; then
    usage
    exit
fi

case $1 in
    "add")
        if [[ $# < 3 ]]; then
            usage
            exit
        fi

        vault=$2
        url=$3

        git remote add $vault "ext::git vault wrap $vault %S $url"
        ;;
    "rm")
        if [[ $# < 2 ]]; then
            usage
            exit
        fi

        vault=$2

        git config --remove-section vault.$vault && \
            git remote rm $vault
        ;;
    "wrap")
        if [[ $# < 4 ]]; then
            usage
            exit
        fi

        vault=$2
        command=$3
        url=$4

        set_enc_options $vault

        if [ ! -f $url ]; then
            create_repo $url
        fi

        wrap $command $url
        ;;
    *)
        usage
        exit
        ;;
esac
